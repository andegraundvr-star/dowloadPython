#помощь другу
#создаем функцию с первым позиционным агрументом и вторым по умолчанию со значением none
def create_dict(data, template=None):
    #второму агрументу функции присваиваем пустой словать, т.к. это изменяемый объект
    if template is None:
        template = {}
    #проверяем значение позиционного аргумента на тип данных
    if isinstance(data, dict):
        return data
    #если позиционный первый аргумент нужного типа, добавляем в словарь
    elif isinstance(data, (int, float, str)):
        template[data] = data
        return template #функция возвращает словарь
    else:
        #для других типов (множества, списки и т.д.) возвращается пустой словарь
        return {}

#вторая функция создает список, с добавлением аргумента в список ,т.к. это изменяемый объект
def data_preparation(old_list):
    new_list = []
    for i_element in old_list:
        new_list.append(create_dict(i_element)) #в список добавляются словари. возвращенные из первой функции
    return new_list

#задаем параметры обработки в функциях - это словарь со строкой, словарем, числом и два пустых словаря, т.к. множество и список не нужны по условию
data = ["sad", {"sds": 23}, {43}, [12, 42, 1], 4444]
#запускаем функцию
data = data_preparation(data)
#выводим ерзультат работы функции
print(data)